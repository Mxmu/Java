第一题：编写一个函数实现两个三行三列的矩阵相乘，函数的形参是两个二维矩阵，函数的返回值是成绩的二维矩阵，在主函数中进行测试。

第二题：用二维for-each语句输出二维数组中每个元素的值。

第三题：在工作目录中建立aaa.bbb.ccc包，在包ccc中建立一个名为Queue队列类，有4个私有成员变量：int[] que, int front，int rear, int counter分别表示创建的任意大小的队列、队列的头部、队列尾部的索引，以及已经入队的元素的个数。写出该类的构造函数、入队函数void insert(int x)、出对函数int remove(), 另外，建立aaa.bbb.ddd包，在ddd包中定义一个测试类MyTest，其中包含主函数，测试Queue类的各个方法。

第四题：定义一个父类Father1, 其中包括一个成员函数void f(){ },定义类Father1的子类Son1，重写父类的f()函数，输出“this is the son1”,定义类Father1的子类Son2，重写父类的f()函数，输出“this is the son2", 定义一个类Jc1，里面包含成员函数 void fun( Father1 f1){ f1.f();  }, 编写一个测试类Test2，包含主函数，分别定义子类Son1和Son2的两个不同的对象，传给Jc1的fun函数，测试多态性。


